"use strict";(self.webpackChunk_9_tq_doc=self.webpackChunk_9_tq_doc||[]).push([[232],{6678:(n,e,t)=>{t.r(e),t.d(e,{Highlight:()=>c,assets:()=>r,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=t(5893),o=t(1151);const l={sidebar_position:2,title:"Quick start"},s=void 0,i={id:"ant-form/basic",title:"Quick start",description:"This is Docusaurus green !",source:"@site/docs/ant-form/basic.mdx",sourceDirName:"ant-form",slug:"/ant-form/basic",permalink:"/lib-docs/docs/ant-form/basic",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ant-form/basic.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Quick start"},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/lib-docs/docs/ant-form/installation"},next:{title:"Tutorial - Extras",permalink:"/lib-docs/docs/category/tutorial---extras"}},r={},p=[],c=({children:n,color:e})=>{const t={span:"span",...(0,o.a)()};return(0,a.jsx)(t.span,{style:{backgroundColor:e,borderRadius:"20px",color:"#fff",padding:"10px",cursor:"pointer"},onClick:()=>{alert(`You clicked the color ${e} with label ${n}`)},children:n})};function u(n){const e={code:"code",p:"p",pre:"pre",...(0,o.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:["This is ",(0,a.jsx)(c,{color:"#25c2a0",children:"Docusaurus green"})," !"]}),"\n",(0,a.jsxs)(e.p,{children:["This is ",(0,a.jsx)(c,{color:"#1877F2",children:"Facebook blue"})," !"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:"import AntForm from '@9troisquarts/ant-form';\nimport 'antd/dist/antd.css';\nimport React from 'react';\n\nAntForm.configure({\n  language: 'fr',\n  file: {\n    addButtonText: 'Ajouter un document',\n    emptyText: 'Aucun fichier',\n  },\n});\n\nexport default () => {\n  return (\n    <div>\n      <AntForm\n        object={{\n          date: '2022-01-01',\n          select: 'one',\n          id: 2,\n          files: [\n            {\n              id: 1,\n              name: 'toto.png',\n              canDestroy: true,\n            },\n            {\n              id: 2,\n              name: 'titi.png',\n              canDestroy: false,\n            },\n          ],\n        }}\n        errors={{ firstname: ['is required'] }}\n        onSubmit={(values) => console.log(values)}\n        onChange={(value, values) => console.log(value, values)}\n        schema={[\n          <h2 key=\"paragraph\" style={{ marginBottom: 24 }}>\n            React Component\n          </h2>,\n          [\n            {\n              name: 'id',\n              hidden: true,\n            },\n            {\n              name: 'firstname',\n              label: 'Firstname',\n              tooltip: 'Firstname',\n              input: {\n                type: 'string',\n              },\n              colProps: {\n                xs: 24,\n                md: 12,\n                lg: 12,\n              },\n            },\n            {\n              name: 'lastname',\n              label: 'Lastname',\n              input: {\n                type: 'string',\n              },\n              colProps: {\n                xs: 24,\n                md: 12,\n                lg: 12,\n              },\n            },\n          ],\n          [\n            {\n              label: 'Proxy',\n              name: 'task',\n              proxy: { name: 'taskId' },\n              input: {\n                type: 'string',\n              },\n              colProps: {\n                xs: 24,\n                md: 12,\n                lg: 12,\n              },\n            },\n            {\n              label: 'Proxy',\n              name: 'tasks',\n              proxy: { name: 'taskIds' },\n              input: {\n                type: 'select',\n                options: [\n                  {\n                    label: 'test',\n                    value: '1',\n                  },\n                  {\n                    label: 'test 2',\n                    value: '2',\n                  },\n                ],\n                inputProps: {\n                  mode: 'multiple',\n                },\n              },\n              colProps: {\n                xs: 24,\n                md: 12,\n                lg: 12,\n              },\n            },\n          ],\n          [\n            {\n              name: 'select',\n              label: 'Select',\n              input: {\n                type: 'select',\n                options: [\n                  {\n                    label: 'Option 1',\n                    value: 'one',\n                  },\n                  {\n                    label: 'Option 2',\n                    value: 'two',\n                  },\n                  {\n                    label: 'Option 3',\n                    value: 'three',\n                  },\n                ],\n              },\n              colProps: {\n                xs: 24,\n                md: 12,\n              },\n            },\n            {\n              name: 'select2',\n              label: 'Select',\n              input: {\n                type: 'select',\n                options: [\n                  {\n                    label: 'Option 1',\n                    value: 'one',\n                  },\n                  {\n                    label: 'Option 2',\n                    value: 'two',\n                  },\n                  {\n                    label: 'Option 3',\n                    value: 'three',\n                  },\n                ],\n                inputProps: {\n                  showSearch: true,\n                },\n              },\n              colProps: {\n                xs: 24,\n                md: 12,\n              },\n            },\n            {\n              name: 'disabledselect',\n              label: 'Disabled Select',\n              input: {\n                type: 'select',\n                options: [\n                  {\n                    label: 'Option 1',\n                    value: 'one',\n                  },\n                ],\n                inputProps: {\n                  disabled: true,\n                },\n              },\n              colProps: {\n                xs: 24,\n                md: 12,\n              },\n            },\n            {\n              name: 'optionGrp',\n              label: 'Select with group',\n              input: {\n                type: 'select',\n                options: [\n                  {\n                    label: 'Jedi',\n                    options: [\n                      {\n                        label: 'Luke Skywalker',\n                        value: 'luke',\n                      },\n                      {\n                        label: 'Obi-wan Kenobi',\n                        value: 'obi',\n                      },\n                    ],\n                  },\n                  {\n                    label: 'Dro\xefde',\n                    options: [\n                      {\n                        label: 'R2D2',\n                        value: 'r2d2',\n                      },\n                    ],\n                  },\n                ],\n              },\n              colProps: {\n                xs: 24,\n                md: 12,\n              },\n            },\n            [\n              {\n                name: 'padawan',\n                label: 'Padawan if obi',\n                condition: (obj) => obj.optionGrp === 'obi',\n                input: {\n                  type: 'select',\n                  options: [\n                    { value: 'luke', label: 'Luke Skywalker' },\n                    { value: 'anakin', label: 'Anakin Skywalker' },\n                  ],\n                },\n                colProps: {\n                  xs: 24,\n                  md: 12,\n                },\n              },\n            ],\n          ],\n          {\n            name: 'checkbox',\n            input: {\n              type: 'checkbox',\n              text: 'Checkbox',\n            },\n          },\n          {\n            name: 'checkboxes',\n            label: 'Checkboxes',\n            input: {\n              type: 'checkboxes',\n              options: [\n                { label: 'Checkbox 1', value: '1' },\n                { label: 'Checkbox 2', value: '2' },\n              ],\n            },\n          },\n          {\n            name: 'radios',\n            label: 'Radio',\n            input: {\n              type: 'radio',\n              options: [\n                { label: 'Checkbox 1', value: '1' },\n                { label: 'Checkbox 2', value: '2' },\n              ],\n            },\n          },\n          {\n            name: 'switch',\n            label: 'Switch',\n            input: {\n              type: 'switch',\n            },\n          },\n          {\n            name: 'Boolean',\n            input: {\n              type: 'boolean',\n              inputProps: {\n                text: 'Publi\xe9',\n              },\n            },\n          },\n          [\n            {\n              name: 'date',\n              label: 'Datepicker',\n              input: {\n                type: 'date',\n                inputProps: {\n                  format: 'L',\n                },\n              },\n              colProps: {\n                xs: 12,\n              },\n            },\n            {\n              name: 'rate',\n              label: 'Rate',\n              input: {\n                type: 'rate',\n                inputProps: {\n                  allowHalf: true,\n                  allowClear: true,\n                  count: 6,\n                },\n              },\n              colProps: {\n                xs: 12,\n              },\n            },\n          ],\n          {\n            name: 'textarea',\n            label: 'Textarea with Help',\n            help: 'this is a help for a field',\n            input: {\n              type: 'text',\n            },\n          },\n          [\n            {\n              name: 'slider',\n              label: 'Slider',\n              input: {\n                type: 'slider',\n                inputProps: {\n                  defaultValue: 30,\n                },\n              },\n              colProps: {\n                xs: 24,\n                md: 12,\n              },\n            },\n            {\n              name: 'rangeslider',\n              label: 'Range Slider',\n              input: {\n                type: 'slider',\n                inputProps: {\n                  range: true,\n                  defaultValue: [20, 50],\n                },\n              },\n              colProps: {\n                xs: 24,\n                md: 12,\n              },\n            },\n          ],\n          {\n            name: 'password',\n            label: 'password',\n            input: {\n              type: 'password',\n            },\n          },\n          {\n            name: 'logo',\n            label: 'File',\n            input: {\n              type: 'file',\n              inputProps: {\n                multiple: false,\n                addButtonProps: {\n                  children: 'Choisir un fichier',\n                },\n              },\n            },\n          },\n          {\n            name: 'files',\n            label: 'File',\n            input: {\n              type: 'file',\n              inputProps: {\n                multiple: true,\n              },\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n"})})]})}function d(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>i,a:()=>s});var a=t(7294);const o={},l=a.createContext(o);function s(n){const e=a.useContext(l);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),a.createElement(l.Provider,{value:e},n.children)}}}]);